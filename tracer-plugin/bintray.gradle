apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'

group = "zjutkz"
version = "1.0.3"
project.archivesBaseName = "tracer-plugin"

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    pomFilePath = "${project.buildDir.absolutePath}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
    if (pomFile.exists()) {
        pom pomFile
    }
}

task signJars(type: Sign, dependsOn: [jar, javadocJar, sourceJar]) {
    sign configurations.archives
}

task signPom(type: Sign) {
    sign configurations.pom
}

if (project.ext.pomFile.exists()) {
    task preparePublication(dependsOn: [signJars, signPom])
} else {
    task preparePublication(dependsOn: signJars)
}

def getSignatureFiles = {
    def allFiles = project.tasks.signJars.signatureFiles.collect{it}
    def signedSources = allFiles.find{ it.name.contains('-sources') }
    def signedJavadoc = allFiles.find{ it.name.contains('-javadoc') }
    def signedJar = (allFiles - [signedSources, signJars])[0]
    return [
            [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],
            [archive: signedJavadoc, classifier: 'javadoc', extension: 'jar.asc'],
            [archive: signedJar, classifier: 'null', extension: 'jar.asc']
    ]
}

def getPomSignature = {
    return project.tasks.signPom.signatureFiles.collect{ it }[0]
}


install {
    repositories.mavenInstaller {
// generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name "tracer_plugin" // #CONFIG# // project title
                url "https://github.com/zjutkz/AndroidTracer"

                licenses {
                    license {
                        name "The Apache Software License, Version 2.0"
                        url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution "repo"
                    }
                }
                developers {
                    developer {
                        id "zjutkz"
                        name "zjutkz"
                        email "suuuperwayne@gmail.com"
                    }
                }
            }
        }
    }
}

bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('gradle.properties').newDataInputStream())

    user = properties.getProperty('BINTRAY_USER');
    key = properties.getProperty('BINTRAY_KEY');

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "tracer-plugin"
        desc = "A gradle plugin to trace Android methods and gradle tasks execution"
        websiteUrl = "https://github.com/zjutkz/AndroidTracer"
        issueTrackerUrl = "https://github.com/zjutkz/AndroidTracer/issues"
        vcsUrl = "https://github.com/zjutkz/AndroidTracer"
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        publish = true
    }
}